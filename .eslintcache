[{"C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\index.tsx":"1","C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\App.tsx":"2","C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\form\\form.component.tsx":"3","C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\login\\login.component.tsx":"4","C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\signup\\signup.component.tsx":"5","C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\home\\home.component.tsx":"6","C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\notes\\notes.component.tsx":"7","C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\notes\\note.component.tsx":"8","C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\notes\\view-note.component.tsx":"9","C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\edit-note\\edit-note.component.tsx":"10"},{"size":608,"mtime":1611395074397,"results":"11","hashOfConfig":"12"},{"size":774,"mtime":1611526204751,"results":"13","hashOfConfig":"12"},{"size":3382,"mtime":1611394472857,"results":"14","hashOfConfig":"12"},{"size":524,"mtime":1611395833176,"results":"15","hashOfConfig":"12"},{"size":529,"mtime":1611395706117,"results":"16","hashOfConfig":"12"},{"size":924,"mtime":1611526172895,"results":"17","hashOfConfig":"12"},{"size":1154,"mtime":1611407257372,"results":"18","hashOfConfig":"12"},{"size":683,"mtime":1611434273057,"results":"19","hashOfConfig":"12"},{"size":1235,"mtime":1611525719052,"results":"20","hashOfConfig":"12"},{"size":1176,"mtime":1611526270206,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b9gt3n",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\index.tsx",[],"C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\App.tsx",[],"C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\form\\form.component.tsx",["45","46","47"],"import React, { useState } from 'react'\r\nimport { BsForwardFill } from 'react-icons/bs'\r\nimport { AiOutlineLoading3Quarters } from 'react-icons/ai'\r\nimport './form.scss'\r\n\r\ninterface Props {\r\n    type: 'signin' | 'signup'\r\n}\r\n\r\nconst Form: React.FC<Props> = ({ type }) => {\r\n    const [activatePassword, setActivatePassword] = useState(false)\r\n    const [activateName, setActivateName] = useState(false)\r\n    const [user, setUser] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const handleClickToName = (event: React.MouseEvent<SVGElement, MouseEvent>) => {\r\n        event?.preventDefault()\r\n        setActivateName(true)\r\n    }\r\n    const handleClickToPassword = (event: React.MouseEvent<SVGElement, MouseEvent>) => {\r\n        event?.preventDefault()\r\n        setActivatePassword(true)\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            {\r\n                type === 'signin'\r\n                    ? loading\r\n                        ? <AiOutlineLoading3Quarters className='loading' />\r\n                        : <>\r\n                            <div className='form-group'>\r\n                                <input onChange={(e) => setUser(e.target.value)} onFocus={() => setActivatePassword(false)} type='text' name='user' id='user' placeholder='Username/Email' />\r\n                                {!activatePassword ? <BsForwardFill onClick={handleClickToPassword} /> : null}\r\n\r\n                            </div>\r\n                            <div className={`form-group ${activatePassword ? 'active' : ''}`}>\r\n                                <input onChange={(e) => setPassword(e.target.value)} type='text' name='password' id='password' placeholder='Password' />\r\n                                <BsForwardFill onClick={() => setLoading(true)} />\r\n                            </div>\r\n                        </>\r\n                    : loading\r\n                        ? <AiOutlineLoading3Quarters className='loading' />\r\n                        : <>\r\n                            <div className='form-group'>\r\n                                <input onChange={(e) => setUser(e.target.value)} onFocus={() => { setActivateName(false); setActivatePassword(false) }} type='email' name='email' id='email' placeholder='Email' />\r\n                                {!activateName ? <BsForwardFill onClick={handleClickToName} /> : null}\r\n\r\n                            </div>\r\n                            <div className={`form-group ${activateName ? 'active' : ''}`}>\r\n                                <input onChange={(e) => setName(e.target.value)} onFocus={() => setActivatePassword(false)} type='text' name='username' id='username' placeholder='Username' />\r\n                                {!activatePassword ? <BsForwardFill onClick={handleClickToPassword} /> : null}\r\n\r\n                            </div>\r\n                            <div className={`form-group ${activatePassword ? 'active' : ''}`}>\r\n                                <input onChange={(e) => setPassword(e.target.value)} type='text' name='password' id='password' placeholder='Password' />\r\n                                <BsForwardFill onClick={() => setLoading(true)} />\r\n                            </div>\r\n                        </>\r\n            }\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form",["48","49"],"C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\login\\login.component.tsx",[],"C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\signup\\signup.component.tsx",[],"C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\home\\home.component.tsx",["50"],"C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\notes\\notes.component.tsx",["51","52"],"import React, { useState } from 'react';\r\n\r\nimport './notes.scss'\r\nimport Note, { INote } from './note.component'\r\n\r\nconst Notes: React.FC = () => {\r\n    const [notes, setNotes] = useState<Array<INote>>([])\r\n    return (\r\n        <section className='notes'>\r\n            <Note\r\n                title='Na me Run am for thee movie wey dem drop yesterday '\r\n                content='I just made it now'\r\n                type='none'\r\n                updatedAt={new Date()}\r\n            />\r\n            <Note\r\n                title='Na me Run am'\r\n                content='I just made it now'\r\n                type='personal'\r\n                updatedAt={new Date()}\r\n            />\r\n            <Note\r\n                title=\"I'm telling you, I made it all by myself\"\r\n                content='I just made it now'\r\n                type='todo'\r\n                updatedAt={new Date()}\r\n            />\r\n            <Note\r\n                title='Just comot for my front this guy'\r\n                content='I just made it now'\r\n                type='work'\r\n                updatedAt={new Date()}\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Notes","C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\notes\\note.component.tsx",[],"C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\notes\\view-note.component.tsx",[],"C:\\Users\\DELL\\Documents\\THE WORKS\\React\\notes\\src\\components\\edit-note\\edit-note.component.tsx",[],{"ruleId":"53","severity":1,"message":"54","line":13,"column":12,"nodeType":"55","messageId":"56","endLine":13,"endColumn":16},{"ruleId":"53","severity":1,"message":"57","line":14,"column":12,"nodeType":"55","messageId":"56","endLine":14,"endColumn":16},{"ruleId":"53","severity":1,"message":"58","line":15,"column":12,"nodeType":"55","messageId":"56","endLine":15,"endColumn":20},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"53","severity":1,"message":"63","line":10,"column":12,"nodeType":"55","messageId":"56","endLine":10,"endColumn":18},{"ruleId":"53","severity":1,"message":"64","line":7,"column":12,"nodeType":"55","messageId":"56","endLine":7,"endColumn":17},{"ruleId":"53","severity":1,"message":"65","line":7,"column":19,"nodeType":"55","messageId":"56","endLine":7,"endColumn":27},"@typescript-eslint/no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","'password' is assigned a value but never used.","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"'search' is assigned a value but never used.","'notes' is assigned a value but never used.","'setNotes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]